# ESPHome configuration above this line

spi:
  clk_pin: 18
  mosi_pin: 23
  miso_pin: 19

pn532_spi:
  cs_pin: 5
  update_interval: 1s
  id: pn532_board
  # on_tag:
  #   then:
  #     - lambda: |-
  #         id(pn532_board).format_mode();
  #     - wait_until:
  #         not:
  #           pn532.is_writing:
  #     - lambda: |-
  #         std::string uri = "https://www.home-assistant.io/tag/8cb8a6c1-037b-45ba-9d79-104ad8e96070";
  #         auto message = new nfc::NdefMessage();
  #         message->add_uri_record(uri);
  #         ESP_LOGD("ndef", "Writing payload: %s", uri.c_str());
  #         id(pn532_board).write_mode(message);
  #     - wait_until:
  #         not:
  #           pn532.is_writing:
  #     - logger.log: "Finished writing tag"
  on_tag:
    then:
      - homeassistant.tag_scanned: !lambda |
          if (!tag.has_ndef_message()) {
            ESP_LOGD("info", "Tag does not have NDEF data");
            return x;
          }
          ESP_LOGD("info", "Tag has NDEF data");
          auto message = tag.get_ndef_message();
          auto records = message->get_records();
          for (auto &record : records) {
            std::string payload = record->get_payload();
            ESP_LOGD("info", "Record payload: %s", payload.c_str());
            size_t pos = payload.find("https://www.home-assistant.io/tag/");
            if (pos != std::string::npos) {
              ESP_LOGD("info", "Tag ID: %s", payload.substr(pos + 34).c_str());
              return payload.substr(pos + 34);
            }
          }
          return x;
